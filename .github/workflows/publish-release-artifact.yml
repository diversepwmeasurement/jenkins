jobs:
  debian:
    if: ${{ needs.determine-version.outputs.is-rc == 'false' }}
    needs: determine-version
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-deb
      if: always()
      name: Fetch Deb
      run: "PROJECT_VERSION=${{ needs.determine-version.outputs.project-version }}\n\
        echo $PROJECT_VERSION\nFILE_NAME=jenkins_${PROJECT_VERSION}_all.deb\nIS_LTS=${{\
        \ needs.determine-version.outputs.is-lts }}\necho \"file-name=$FILE_NAME\"\
        \ >> $GITHUB_OUTPUT\n\nREPO=debian\nif [ ${IS_LTS} = 'true' ]\nthen\n  REPO=debian-stable\n\
        fi\n\necho $REPO\n\nwget -q https://get.jenkins.io/${REPO}/${FILE_NAME}\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-deb
      if: always()
      name: Upload Release Asset
      uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
      with:
        files: ${{ steps.fetch-deb.outputs.file-name }}
  determine-version:
    outputs:
      is-lts: ${{ steps.set-version.outputs.is-lts }}
      is-rc: ${{ steps.set-version.outputs.is-rc }}
      project-version: ${{ steps.set-version.outputs.project-version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      id: set-version
      name: Set version
      run: "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)\n\
        \ndot_count=$(echo $version | sed 's/[^.]//g' | awk '{ print length }')\n\
        if [ \"${dot_count}\" = '2' ]\nthen\n  is_lts=true\nelse\n  is_lts=false\n\
        fi\n\nis_rc=false\nif [[ ${version} == *\"-SNAPSHOT\" ]]; then\n  is_rc=true\n\
        fi\n\necho \"Version is $version, is_lts: $is_lts, is_rc: $is_rc\"\n\necho\
        \ \"is-lts=${is_lts}\" >> $GITHUB_OUTPUT\necho \"project-version=$version\"\
        \ >> $GITHUB_OUTPUT\necho \"is-rc=${is_rc}\" >> $GITHUB_OUTPUT\n"
  redhat:
    if: ${{ needs.determine-version.outputs.is-rc == 'false' }}
    needs: determine-version
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-rpm
      if: always()
      name: Fetch RPM
      run: "PROJECT_VERSION=${{ needs.determine-version.outputs.project-version }}\n\
        echo $PROJECT_VERSION\nFILE_NAME=jenkins-${PROJECT_VERSION}-1.1.noarch.rpm\n\
        IS_LTS=${{ needs.determine-version.outputs.is-lts }}\n\necho \"file-name=$FILE_NAME\"\
        \ >> $GITHUB_OUTPUT\n\nREPO=redhat\nif [ ${IS_LTS} = 'true' ]\nthen\n  REPO=redhat-stable\n\
        fi\n\necho $REPO\n\nwget -q https://get.jenkins.io/${REPO}/${FILE_NAME}\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-rpm
      if: always()
      name: Upload Release Asset
      uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
      with:
        files: ${{ steps.fetch-rpm.outputs.file-name }}
  suse:
    if: ${{ needs.determine-version.outputs.is-rc == 'false' }}
    needs: determine-version
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-suse-rpm
      if: always()
      name: Fetch suse rpm
      run: "PROJECT_VERSION=${{ needs.determine-version.outputs.project-version }}\n\
        echo $PROJECT_VERSION\n# we need opensuse to the file \nOUTPUT_FILE_NAME=jenkins-${PROJECT_VERSION}-1.2-opensuse.noarch.rpm\n\
        IS_LTS=${{ needs.determine-version.outputs.is-lts }}\necho \"file-name=$OUTPUT_FILE_NAME\"\
        \ >> $GITHUB_OUTPUT\n\nREPO=opensuse\nif [ ${IS_LTS} = 'true' ]\nthen\n  REPO=opensuse-stable\n\
        fi\n\necho $REPO\n\nwget -q https://get.jenkins.io/${REPO}/jenkins-${PROJECT_VERSION}-1.2.noarch.rpm\
        \ -O ${OUTPUT_FILE_NAME}\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-suse-rpm
      if: always()
      name: Upload Release Asset
      uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
      with:
        files: ${{ steps.fetch-suse-rpm.outputs.file-name }}
  war:
    if: ${{ needs.determine-version.outputs.is-rc == 'false' }}
    needs: determine-version
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-war
      name: Fetch war
      run: "FILE_NAME=jenkins.war\nPROJECT_VERSION=${{ needs.determine-version.outputs.project-version\
        \ }}\nIS_LTS=${{ needs.determine-version.outputs.is-lts }}\necho $PROJECT_VERSION\n\
        echo \"file-name=$FILE_NAME\" >> $GITHUB_OUTPUT\n\nREPO=war\nif [ ${IS_LTS}\
        \ = 'true' ]\nthen\n  REPO=war-stable\nfi\n\necho $REPO\n\nwget -q https://get.jenkins.io/${REPO}/${PROJECT_VERSION}/${FILE_NAME}\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-war
      name: Upload Release Asset
      uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
      with:
        files: ${{ steps.fetch-war.outputs.file-name }}
  windows:
    if: ${{ needs.determine-version.outputs.is-rc == 'false' }}
    needs: determine-version
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: fetch-msi
      if: always()
      name: Fetch MSI
      run: "PROJECT_VERSION=${{ needs.determine-version.outputs.project-version }}\n\
        echo $PROJECT_VERSION\nFILE_NAME=jenkins.msi\nIS_LTS=${{ needs.determine-version.outputs.is-lts\
        \ }}\n\necho \"file-name=$FILE_NAME\" >> $GITHUB_OUTPUT\n\nREPO=windows\n\
        if [ ${IS_LTS} = 'true' ]\nthen\n  REPO=windows-stable\nfi\n\necho $REPO\n\
        \nwget -q https://get.jenkins.io/${REPO}/${PROJECT_VERSION}/${FILE_NAME}\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-msi
      if: always()
      name: Upload Release Asset
      uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
      with:
        files: ${{ steps.fetch-msi.outputs.file-name }}
name: Publish artifact
on:
  repository_dispatch:
    types: trigger-ga___publish-release-artifact.yml
permissions:
  contents: read
